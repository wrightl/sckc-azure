# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - sckc

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build solution
        run: dotnet build --configuration Release 

      - name: dotnet publish webapp
        run: dotnet publish ./admin.app/ -c Release -o ${{env.DOTNET_ROOT}}/app

      - name: dotnet publish function
        run: dotnet publish ./admin.function/ -c Release -o ${{env.DOTNET_ROOT}}/func

      - name: Insert secrets into appsettings
        run: |
            cd ${{env.DOTNET_ROOT}}/app
            ((Get-Content -path appsettings.json -Raw) -replace '{azure_storage_connstring}','${{ secrets.AZURE_STORAGE_CONNSTRING }}') | Set-Content -Path appsettings.json
            ((Get-Content -path appsettings.json -Raw) -replace '{stripe_webhook_test_secret}','${{ secrets.STRIPE_WEBHOOK_TEST_SECRET }}') | Set-Content -Path appsettings.json
            ((Get-Content -path appsettings.json -Raw) -replace '{stripe_webhook_live_secret}','${{ secrets.STRIPE_WEBHOOK_LIVE_SECRET }}') | Set-Content -Path appsettings.json
            ((Get-Content -path appsettings.json -Raw) -replace '{sendgrid_apikey}','${{ secrets.SENDGRID_APIKEY }}') | Set-Content -Path appsettings.json

      - name: Upload artifact for webapp
        uses: actions/upload-artifact@v2
        with:
          name: net-app
          path: ${{env.DOTNET_ROOT}}/app

      - name: Upload artifact for function
        uses: actions/upload-artifact@v2
        with:
          name: net-func
          path: ${{env.DOTNET_ROOT}}/func

  deploy-webapp:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact for webapp
        uses: actions/download-artifact@v2
        with:
          name: net-app

      - name: Deploy webapp to Azure
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'sckc'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FFD49708A3E041FCB10C729122AA5AA6 }}
          package: .

  deploy-function:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact for function
        uses: actions/download-artifact@v2
        with:
          name: net-func

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az functionapp config appsettings set --name sckc-func --resource-group Default-Web-WestEurope --settings azure_storage_connstring=${{ secrets.AZURE_STORAGE_CONNSTRING }}
            az functionapp config appsettings set --name sckc-func --resource-group Default-Web-WestEurope --settings base_url=http://www.sheffieldcitykayakclub.co.uk/app/api/
            az functionapp config appsettings set --name sckc-func --resource-group Default-Web-WestEurope --settings sendgrid_apikey=${{ secrets.SENDGRID_APIKEY }}

      - name: Deploy function to Azure
        uses: azure/functions-action@v1.4.6
        with:
          app-name: 'sckc-func'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package: .

  cleanup:
      needs: [ deploy-webapp, deploy-function ]
      if: always()
      runs-on: ubuntu-latest
      steps:

          - name: Delete Artifacts
            uses: GeekyEggo/delete-artifact@v1.0.0
            with:
                name: |
                    net-app
                    net-function
                failOnError: false
